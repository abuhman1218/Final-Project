Combustion Reaction: Computer Science Final Project
Amber Buhman
Chemical engineers deal with many problems involving reactors, distillers, combustors, and other systems causing reactions.   Combustion reactions of hydrocarbons commonly arise in problems. The idea for this code was to show the forming of products over an hour of time if the hydrocarbon is combusted to completion. This code shows the linear production of CO2 and H20. This code also shows that the most common hydrocarbons start at CH4 and increase by CH2. The idea for this project was approved by Professor Quinn Lanik.
The code for this uses radio buttons, a scroll bar, and push buttons. The radio buttons switch between the two products: carbon dioxide and water vapor. One of the main challenges in the coding process was figuring out how to differentiate between the products in the file being read. At first, both the CO2 and H2O kept appearing on the same graph rather than on separate graphs through the radio buttons. I had to open the file and have it read one column at a time, so the products would appear on separate graphs.
The scroll bar was used to show the difference in the amount of products between ten common hydrocarbons: methane, ethane, propane, butane, pentane, hexane, heptane, octane, nonane, and decane. The scroll bar pauses for one second as it goes through the hydrocarbons. As the hydrocarbon increases in size, the number of products also increases. The difference between the scales of each graph clearly shows this. The scale of the graph automatically changes for each hydrocarbon and for each product. As the scroll bar changes between each hydrocarbon, it clearly shows the linear reaction and production of the products. The actual plotted points look the same, but the scale of the graph changes.
The push button, which adds CH2 to the hydrocarbon is used to show the difference between the hydrocarbons. Each one increases by CH2. This added feature better explains the graphs by showing why the number of products increases in the way that it does. A message box appears each time the push button is pushed. The message box displays which hydrocarbon it is, depending on how much CH2 has been added.
The push buttons was one of the greatest difficulties in the coding process. It was difficult to get the string to increase and the message box to change each time. To get this code to work, I ran it on its own in Matlab. This allowed me to see what each line of the code did. To help me with this function of the code, I looked back at the lab where we made a vending machine. Another difficulty I faced was in how to use the callbacks and at the functions. This was a confusing process, and it took me several tries to figure out how to get the callback to work. 
This project forced me to fully understand how GUIs work. The coding process took me a long time, but I eventually figured out how to get all the different functions to work together and the callbacks to work as well. The code I wrote will be beneficial to me in future chemical engineering classes because I will be able to upload data from hydrocarbons and see the products produced on a graph. I could also slightly change the code so it could work for reactions other than combustion by simply graphing the products of the different reactants.
GUIs could be very useful in chemical engineering. They can be used to track the products being produced in reactions by graphing them, like in my example. It would also be possible to show reactants being put into a reactor and seeing what products those reactants would produce. GUIs could create clear visuals to see how reactants react together. Radio buttons and scrollbars allow multiple reactants to be tracked at the same time but viewed separately. The products could also be shown on the same graph, but graphed in different colors with a legend to show which color aligns with each product.
